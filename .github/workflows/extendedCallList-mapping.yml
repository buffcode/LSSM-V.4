name: '[üë∑] Check extendedCallList event mapping'
run-name: '[üë∑] Check extendedCallList event mapping on `${{ inputs.ref }}`'

on:
    schedule:
        - cron: "0 */6 * * *"

jobs:
    eventMapping:
        runs-on: ubuntu-latest
        name: '[üë∑] Check extendedCallList event mapping'
        steps:
            - name: '[üì•] checkout'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: '[üåê] extract module languages'
              id: module_languages
              run: |
                  languages=`find src/modules/extendedCallList/i18n/ -type f -name '*.root.json' -printf '%f\n' | cut -d'.' -f1 | tr '\n' ' '`
                  echo "languages=${languages% }" >> "$GITHUB_OUTPUT"

            - name: '[‚§µÔ∏è] download mission i18n files'
              run: |
                  mkdir -fp static/missions
                  languages=`echo "${{ steps.module_languages.outputs.languages }}"`
                  for lang in ${languages}; do
                      echo "Downloading mission i18n file for ${lang} from https://v4.lss-manager.de/missions/${lang}.json..."
                      curl -sSL -o static/missions/${lang}.json "https://v4.lss-manager.de/missions/${lang}.json"
                  done

            - name: '[üßê] compare event missions to mission i18n files'
              id: mission_compare
              run: |
                  jq -cn '{}' > static/missions/unmapped.json

                  languages=`echo "${{ steps.module_languages.outputs.languages }}"`
                  for lang in ${languages}; do
                      echo "Extracting events for ${lang}..."
                      jq '. | map(select(.additional.optional_event_mission)) | map(.id | tostring) | sort | unique' static/missions/${lang}.json > static/missions/${lang}.events.json

                      echo "Extracting already mapped events for ${lang}..."
                      jq '.eventMissions.default | flatten | map(. | tostring) | sort | unique' src/modules/extendedCallList/i18n/de_DE.root.json > static/missions/${lang}.mapped.json

                      echo "Getting unmapped events for ${lang}..."
                      jq -n --slurpfile events static/missions/${lang}.events.json --slurpfile mapped static/missions/${lang}.mapped.json '($events | flatten) - ($mapped | flatten)' > static/missions/${lang}.unmapped.json

                      echo "Merge unmapped events for ${lang}..."
                      jq -cn --arg lang "${lang}" --slurpfile langfile static/missions/${lang}.unmapped.json --rawfile merged static/missions/unmapped.json '$merged | fromjson | .[$lang] = ($langfile | flatten)' > static/missions/unmapped.tmp.json
                      mv static/missions/unmapped.tmp.json static/missions/unmapped.json
                  done

                  echo "diffs_detected=`cat static/missions/unmapped.json`" >> "$GITHUB_OUTPUT"

            - name: '[üîç] find existing issue'
              id: issue_exists
              uses: actions-cool/issues-helper@v3
              with:
                  actions: 'find-issues'
                  token: ${{ secrets.GITHUB_TOKEN }}
                  body-includes: '<!-- automanaged -->'
                  title-includes: 'ü©π [extendedCallList] Unmapped events'

            - name: '[‚ú®] create new issue'
              if: ${{ steps.mission_compare.outputs.diffs_detected != '{}' && steps.issue_exists.outputs.issues == '[]' }}
              uses: actions-cool/issues-helper@v3
              id: issue_create
              with:
                  actions: 'create-issue'
                  token: ${{ secrets.GITHUB_TOKEN }}
                  title: 'ü©π [extendedCallList] Unmapped events'
                  emoji: 'eyes'
                  body: |
                      <!-- automanaged -->
                      The following events are not mapped in the `extendedCallList` module:
                      ```json
                      ${{ toJSON(fromJSON(steps.mission_compare.outputs.diffs_detected)) }}
                      ```

                      Please map them in the `extendedCallList` module in the respective language files.

            - name: '[‚úèÔ∏è] update issue'
              if: ${{ steps.mission_compare.outputs.diffs_detected != '{}' && steps.issue_exists.outputs.issues != '[]' }}
              uses: actions-cool/issues-helper@v3
              with:
                  actions: 'update-issue'
                  token: ${{ secrets.GITHUB_TOKEN }}
                  issue-number: ${{ fromJSON(steps.issue_exists.issues)[0].number }}
                  title: 'ü©π [extendedCallList] Unmapped events'
                  emoji: 'eyes'
                  body: |
                      <!-- automanaged -->
                      The following events are not mapped in the `extendedCallList` module:
                      ```json
                      ${{ toJSON(fromJSON(steps.mission_compare.outputs.diffs_detected)) }}
                      ```

                      Please map them in the `extendedCallList` module in the respective language files.

            - name: '[‚úÖ] close issue'
              if: ${{ steps.mission_compare.outputs.diffs_detected == '{}'  && (steps.issue_create.outputs.issue-number || steps.issue_exists.outputs.isues != '[]') }}
              env:
                  issue_number: ${{ steps.issue_create.outputs.issue-number || (fromJSON(steps.issue_exists.outputs.issues)[0].number) }}
              uses: actions-cool/issues-helper@v3
              with:
                  actions: 'close-issue'
                  token: ${{ secrets.GITHUB_TOKEN }}
                  issue-number: ${{ env.issue_number }}
